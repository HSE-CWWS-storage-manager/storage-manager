@page "/equipment/{id}"

<MudGrid Justify="Justify.Center">
    <PageHeader Backlink="/equipment">Оборудование</PageHeader>
    <MudItem xs="12">
        <MudSimpleTable>
            <tr>
                <th>Наименование</th>
                <td><MudText>@(ActualItem?.Name ?? "Item not found")</MudText></td>
            </tr>
            <tr>
                <th>Количество</th>
                <td><MudText>@(ActualItem?.InStock ?? -1)</MudText></td>
            </tr>
            <tr>
                <th>Модель</th>
                <td><MudText>@(ActualItem?.Model ?? "Item not found")</MudText></td>
            </tr>
            <tr>
                <th>Серийный номер</th>
                <td><MudText>@(ActualItem?.SerialNumber ?? "Item not found")</MudText></td>
            </tr>
        </MudSimpleTable>
    </MudItem>
    <MudItem xs="12">
        <MudButtonGroup Vertical="true" Variant="Variant.Outlined" FullWidth="true">
            <MudButton Disabled="@(ActualItem == null)">Выдать студенту</MudButton>
            <MudButton Disabled="@(ActualItem == null)">Оформить возврат</MudButton>
            <MudButton Disabled="@(ActualItem == null)">Списать</MudButton>
            <MudButton Disabled="@(ActualItem == null)">Получить QR-код</MudButton>
        </MudButtonGroup>
    </MudItem>
</MudGrid>

@code {
    private readonly EquipmentDto[] _equipmentData;

    [CascadingParameter]
    public required EquipmentDto[] EquipmentData
    {
        get => _equipmentData;
        init
        {
            _equipmentData = value;
            ActualItem = EquipmentData.FirstOrDefault(x => x.Id.ToString().Equals(Id));
        }
    }

    [Parameter] public required string Id { get; init; }
    
    private EquipmentDto? ActualItem { get; init; }
}